<li class="flex justify-center z-10">
    <div
        x-data="{
            open: false,
            toggle() {
                if (this.open) {
                    return this.close()
                }

                this.$refs.button.focus()

                this.open = true
            },
            close(focusAfter) {
                if (! this.open) return

                this.open = false

                focusAfter && focusAfter.focus()
            }
        }"
        x-on:keydown.escape.prevent.stop="close($refs.button)"
        x-on:focusin.window="! $refs.panel.contains($event.target) && close()"
        x-id="['dropdown-button']"
        class="z-10 relative block py-2 pl-3 pr-4 text-gray-900 rounded hover:bg-gray-100 md:hover:text-blue-700 md:p-0 dark:text-white md:dark:hover:text-blue-500 dark:hover:bg-gray-700 dark:hover:text-white md:dark:hover:bg-transparent"
        >

        <!-- Button -->
        <button
            x-ref="button"
            x-on:click="toggle()"
            :aria-expanded="open"
            :aria-controls="$id('dropdown-button')"
            type="button"
            class="z-10 flex items-center"
        >
            {{ .username }}

            <!-- Heroicon: chevron-down -->
            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-gray-400" viewBox="0 0 20 20" fill="currentColor">
                <path fill-rule="evenodd" d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z" clip-rule="evenodd" />
            </svg>
        </button>

        <!-- Panel -->
        <div
            x-ref="panel"
            x-show="open"
            x-transition.origin.top.left
            x-on:click.outside="close($refs.button)"
            :id="$id('dropdown-button')"
            style="display: none;"
            class="z-10 absolute left-0 mt-2 w-40 rounded-md bg-white shadow-md"
        >
            <a href="/progress" class="z-10 flex items-center gap-2 w-full first-of-type:rounded-t-md last-of-type:rounded-b-md px-4 py-2.5 text-base text-left text-sm hover:bg-gray-50 disabled:text-gray-500">
                My videos
            </a>
            <a class="flex cursor-pointer items-center gap-2 w-full first-of-type:rounded-t-md last-of-type:rounded-b-md px-4 py-2.5 text-left text-sm hover:bg-gray-50 disabled:text-gray-500"
            @click="
              fetch('http://{{.API_GATEWAY_URL}}/auth/logout', 
                    {
                      method: 'POST',
                      credentials: 'include'
                    }
              )
              .then(response => {
                  document.cookie = 'token=; Max-Age=0'
                  window.location.href = '/home'
              })              
              .catch(error => alert(error))
            "
            >
            <span class="text-red">Logout</span>
            </a>
        </div>
    </div>
</li>

<!-- Notification Button -->
<li>
    <button>
      <strong class="relative inline-flex items-center rounded text-xs font-medium">
        <span class="hidden absolute -top-2 -right-2 h-5 w-5 rounded-full bg-red flex justify-center items-center items"
         id="notif-container"
        ><span id="notif-count"></span></span>
        <svg class="w-6 h-6 text-white hover:text-blue-400" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 16 21">
            <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 3.464V1.1m0 2.365a5.338 5.338 0 0 1 5.133 5.368v1.8c0 2.386 1.867 2.982 1.867 4.175C15 15.4 15 16 14.462 16H1.538C1 16 1 15.4 1 14.807c0-1.193 1.867-1.789 1.867-4.175v-1.8A5.338 5.338 0 0 1 8 3.464ZM4.54 16a3.48 3.48 0 0 0 6.92 0H4.54Z"/>
        </svg>
      </strong>
    </button>
</li>

<script src="https://cdn.socket.io/4.6.0/socket.io.min.js" integrity="sha384-c79GN5VsunZvi+Q/WObgk2in0CbZsHnjEqvFxC5DxHn9lTfNce2WW6h2pH6u/kF+" crossorigin="anonymous"></script>

<script>
    var socket = io.connect('ws://localhost:5001', { transports: ['websocket'] });

    // Subscribe to the user's own room.
    socket.emit("join", { room: '{{ .username }}' });

    // Request for the notification count.
    socket.emit("getNotifications", { username: '{{ .username }}' });

    const notifCountContainer = document.getElementById("notif-container");

    // Handle when the websocket sends back notifications.
    socket.on("updateNotifications", (info) => {
        console.log("Updating notification count: ", info.count);
        document.getElementById("notif-count").innerHTML = info.count;
        
        if (info.count > 0) {
            notifCountContainer.style.display = "block";
        } else {
            notifCountContainer.style.display = "none";
        }
    })
</script>

