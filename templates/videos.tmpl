{{ $end := 15 }}
{{ $i := 0 }}
{{ $PageNumber := .Page }}
<div class="grid lg:grid-cols-4 gap-4 pt-4 px-4" x-data>

{{ range $Index, $Entry := .Entries }}
  <div class="max-w-sm w-full h-64 lg:max-w-full lg:flex relative"
    {{ if eq $Index $end }}
        hx-get="/feed/16/{{ mul 16 (add 1 $PageNumber) }}"
        hx-trigger="revealed"
        hx-target="closest .grid"
        hx-swap="afterend"
    {{ end }}
  >
    <a @click="window.location = '/watch/{{ $Entry.Video.Username }}/{{ $Entry.Video.Key }}/{{ add $Index $PageNumber }}'"
    class="object-cover w-full flex flex-row items-center rounded-lg md:flex-row md:max-w-xl bg-surface-0 hover:bg-surface-1">

        <div class="w-[40%] h-full rounded-t-lg md:rounded-none md:rounded-l-lg">
          <img class="object-cover w-full h-full rounded-t-lg md:rounded-none md:rounded-l-lg" src="{{ $Entry.ThumbnailURL }}" loading="lazy">
        </div>

        <div class="flex flex-col justify-between p-4 leading-normal w-[60%]">
            <h5 class="mb-2 text-2xl font-bold tracking-tight text-gray-900 dark:text-white">{{ $Entry.Video.Name }}</h5>
            <p class="mb-3 font-normal text-gray-700 dark:text-gray-400">{{ $Entry.Video.Username }}</p>
            <p id="{{ $Entry.Video.Key }}-views" class="mb-3 font-normal text-gray-700 dark:text-gray-400">{{ $Entry.Video.Views }} views</p>
            <p id="{{ $Entry.Video.Key }}-likes" class="mb-3 font-normal text-gray-700 dark:text-gray-400">0 likes</p>
        </div>

    </a>
  </div>
  <script>
    // Join the room for the video.
    // socket.emit('video', { video:'{{ $Entry.Video.Key }}' });

    // For updating views.
    socket.on('update', (info) => {
      document.getElementById(info.room + "-views").innerHTML = `${info.value} views`;
    });

    socket.on('like', (info) => {
      document.getElementById(info.key + "-likes").innerHTML = `${info.value} likes`;
    });

    // Initial call.
    socket.emit('getNewViewCount', { to:'user', video:'{{ $Entry.Video.Key }}' });
    socket.emit('getNewLikeCount', { to:'user', videoKey:'{{ $Entry.Video.Key }}', videoID:'{{ $Entry.Video.VideoID }}' });

    // Poll for the video every 10 seconds.
    setInterval(() => {
      console.log("Updating video values...");
      socket.emit('getNewViewCount', { to:'user', video:'{{ $Entry.Video.Key }}' });
      socket.emit('getNewLikeCount', { to:'user', videoKey:'{{ $Entry.Video.Key }}', videoID:'{{ $Entry.Video.VideoID }}' });
    }, 10000);
  </script>
  {{- end}}
</div>
